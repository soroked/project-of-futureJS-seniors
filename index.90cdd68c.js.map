{"mappings":"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","sources":["src/js/main/modal-windows.js","node_modules/@parcel/runtime-js/lib/runtime-81377719e79deb95.js","node_modules/@parcel/runtime-js/lib/runtime-f2800230ef7012b1.js"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://drinkify.b.goit.study/api/v1/';\nconst ENDPOINT_INGREDIENTS = 'ingredients/';\nimport { getCocktails } from '../swagger-api.js';\nimport * as basicLightbox from 'basiclightbox';\nimport 'basiclightbox/dist/basicLightbox.min.css';\nimport {\n  addToFavorites,\n  removeFromFavoritesByIndex,\n} from '../localstorage-fav-ingredients.js';\n\nconst iconOff = new URL('../../img/icons.svg#icon-x', import.meta.url);\nconst iconX = '#icon-x';\n\nfunction getIngredients(queryId) {\n  return axios.get(BASE_URL + ENDPOINT_INGREDIENTS + `${queryId}`);\n}\n\n// MODAL TEXT\n\nlet abd = '';\n\nexport function modalInstanceCoctail(query) {\n  if (abd === query) {\n    return;\n  }\n  abd = query;\n\n  getCocktails(query).then(response => {\n    const ingridientsMarkup = response.data[0].ingredients\n      .map(\n        item =>\n          `<li class=\"item-modal-coctail-ingridients mw-text-third-dark\" data-value=${item.ingredientId}>\n                    <p class=\"link-modal-coctail-ingridient mw-text-third-dark\">\n                    ${item.title}\n                    </p>\n                    </li>`\n      )\n      .join('');\n\n    let favs = JSON.parse(localStorage.getItem('cocktails')) || [];\n    let addOrDelete = 'ADD TO FAVORITE';\n    addOrDelete = favs?.some(item => item._id === response.data[0]._id)\n      ? 'REMOVE FROM FAVORITE'\n      : 'ADD TO FAVORITE';\n\n    const modalInstanceCoctail = basicLightbox.create(\n      `\n                    <div class=\"modal-coctail mw-modal-dark\">\n                    <div class=\"photo-card-coctail dark-photo-card-coctail\">\n                    <div class=\"photo-info\">\n                    <img class=\"photo-coctail\" src=\"${response.data[0].drinkThumb}\" alt=\"\" title=\"\" height=\"277\" loading=\"lazy\"/>\n                    <div class=\"info-modal-coctail\">\n                    \n                    <h2 class=\"main-title-modal-coctail visually-hidden  mw-text-main-dark\">${response.data[0].drink}</h2>\n\n                    <p class=\"title-modal-coctail-categories mw-text-main-dark\">INGREDIENTS:</p>\n\n                    <p class=\"text-modal-coctail-type mw-text-secondary-dark\">Per cocktail</p>\n\n                    <ul class=\"list-modal-coctail-ingridients\">` +\n        ingridientsMarkup +\n        `</ul>\n                     </div></div>\n                    <p class=\"title-modal-coctail-categories mw-text-main-dark\">INSTRUCTIONS:</p>\n                    \n                    <p class=\"paragrapg-modal-coctail mw-text-secondary-dark\">\n                    ${response.data[0].instructions}\n                    </p>\n                    <div class=\"buttons\">\n                    <button class=\"add-btn-modal-coctail\" data-value=${\n                      response.data[0]._id\n                    }>${addOrDelete}</button>\n                    <button class=\"back-btn-modal-coctail mw-text-first-dark mw-btn-dark\">Back</button>\n                    </div>\n                    <button type=\"button\" class=\"modal-coctail-close-btn\">\n            <svg class=\"icon-off mw-text-first-dark\" width=\"24\" height=\"24\"><use href=${\n              iconOff.pathname + iconX\n            }></use></svg>\n          </button>\n                    </div>\n                    </div>\n                    `\n    );\n\n    // RENDER\n\n    modalInstanceCoctail.show();\n\n    // Add id for General modal window\n    const modal = document.querySelector('.basicLightbox');\n    modal.id = 'general';\n\n    const addToFavorite = document.querySelector('.add-btn-modal-coctail');\n    addToFavorite.addEventListener('click', onAddBtn);\n    const heartButton = document.querySelector('button-add-fav');\n    console.log(heartButton);\n\n    function onAddBtn(e) {\n      if (\n        e.target.nodeName === 'BUTTON' ||\n        e.target.classList.contains('add-button-modal-coctail')\n      ) {\n        const id = e.target.dataset.value;\n        const cocktail = response.data[0];\n        favs = JSON.parse(localStorage.getItem('cocktails')) || [];\n\n        const index = favs.findIndex(item => item._id === id);\n\n        if (index < 0) {\n          favs.push(cocktail);\n          addToFavorite.innerHTML = 'REMOVE FROM FAVORITE';\n          localStorage.setItem('cocktails', JSON.stringify(favs));\n          return;\n        }\n        favs.splice(index, 1);\n        addToFavorite.innerHTML = 'ADD TO FAVORITE';\n        localStorage.setItem('cocktails', JSON.stringify(favs));\n      }\n    }\n\n    const linkModalCoctail = document.querySelector(\n      '.list-modal-coctail-ingridients'\n    );\n\n    const backBtnModalCoctail = document.querySelector(\n      '.back-btn-modal-coctail'\n    );\n    const modalCoctailCloseBtn = document.querySelector(\n      '.modal-coctail-close-btn'\n    );\n    const modalCoctail = document.querySelector('.modal-coctail');\n\n    // RENDER INGREDIENTS\n    function handleLinkOpenModalIngridient(e) {\n      e.preventDefault();\n\n      if (\n        e.target.parentElement.classList.contains(\n          'item-modal-coctail-ingridients'\n        )\n      ) {\n        const queryId = e.target.closest('.item-modal-coctail-ingridients')\n          .dataset.value;\n\n        modalCoctail.classList.add('is-hidden-modal');\n\n        //   modal.style.background = '#0000';\n\n        getIngredients(queryId).then(resp => {\n\n          let favsIngredients = JSON.parse(localStorage.getItem('favorites')) || [];\n          console.log(favsIngredients);\n          let addOrDeleteIngredient = 'ADD TO FAVORITE';\n          addOrDeleteIngredient = favsIngredients?.some(item => item._id === resp.data[0]._id)\n            ? 'REMOVE FROM FAVORITE'\n            : 'ADD TO FAVORITE';\n\n\n\n          const modalInstanceIngridient = basicLightbox.create(`\n                    <div class=\"modal-ingredient mw-modal-dark\">\n                    <div class=\"ingridient-card\">\n                    <h2 class=\"title-modal-ingridient mw-text-main-dark\">${\n                      resp.data[0].title\n                    }</h2>\n                    <p class=\"type-ingridient-modal-ingridient mw-text-secondary-dark\">${\n                      resp.data[0].type\n                    }</p>\n                    <div class=\"line mw-btn-dark\"> </div>\n                    <p class=\"paragraph-modal-ingridient mw-text-secondary-dark\"><span class=\"span-paragraph-modal-ingridient mw-text-main-dark\">${\n                      resp.data[0].title\n                    }</span> ${resp.data[0].description}</p>\n                    <ul class=\"list-modal-ingridients \">\n                    <li class=\"item-modal-ingridients mw-text-third-dark\">\n                    <p class=\"text-modal mw-text-third-dark\">Type: ${\n                      resp.data[0].type\n                    }</p>\n                    </li>\n                    <li class=\"item-modal-ingridients mw-text-third-dark\">\n                    <p class=\"text-modal mw-text-third-dark\">\n                    Country of origin: ${resp.data[0].country}</p>\n                    </li>\n                    <li class=\"item-modal-ingridients mw-text-third-dark\">\n                    <p class=\"text-modal mw-text-third-dark\"> Alcohol by volume: ${\n                      resp.data[0].abv\n                    }</p>\n                    </li>\n                    <li class=\"item-modal-ingridients mw-text-third-dark\">\n                    <p class=\"text-modal mw-text-third-dark\">Flavour: ${\n                      resp.data[0].flavour\n                    }</p>\n                    </li>\n                    </ul>\n                    </div>\n                    <div class=\"buttons\">\n                    <button class=\"add-btn-modal-ingridient\" data-value=${\n                      resp.data[0]._id\n                    }>${addOrDeleteIngredient}</button>\n                    <button class=\"back-btn-modal-ingridient mw-text-first-dark mw-btn-dark\">Back</button>\n                    </div>\n                    <button type=\"button\" class=\"modal-ingredient-close-btn\">\n            <svg class=\"icon-off mw-text-first-dark\" width=\"24\" height=\"24\"><use href=${\n              iconOff.pathname + iconX\n            }></use></svg>\n          </button>\n                    </div></div>\n                    `);\n\n          modalInstanceIngridient.show();\n\n          const addToFavoriteIngredient = document.querySelector('.add-btn-modal-ingridient');\n          addToFavoriteIngredient.addEventListener('click', onAddBtnIngredient);\n          // const heartButton = document.querySelector('button-add-fav');\n          // console.log(heartButton);\n\n          function onAddBtnIngredient(e) {\n            if (\n              e.target.nodeName === 'BUTTON' ||\n              e.target.classList.contains('add-btn-modal-ingridient')\n            ) {\n              const id = e.target.dataset.value;\n              const ingredient = resp.data[0];\n              favsIngredients = JSON.parse(localStorage.getItem('favorites')) || [];\n\n              const index = favsIngredients.findIndex(item => item._id === id);\n\n              if (index < 0) {\n                favsIngredients.push(ingredient);\n                addToFavoriteIngredient.innerHTML = 'REMOVE FROM FAVORITE';\n                localStorage.setItem('favorites', JSON.stringify(favsIngredients));\n                return;\n              }\n              favsIngredients.splice(index, 1);\n              addToFavoriteIngredient.innerHTML = 'ADD TO FAVORITE';\n              localStorage.setItem('favorites', JSON.stringify(favsIngredients));\n              return;\n            }\n          }\n\n          const backBtnModalIngridient = document.querySelector(\n            '.back-btn-modal-ingridient'\n          );\n          const modalIngredientCloseBtn = document.querySelector(\n            '.modal-ingredient-close-btn'\n          );\n\n          const addBtnModalIngredient = document.querySelector(\n            '.add-btn-modal-ingridient'\n          );\n\n          // addBtnModalIngredient.addEventListener('click', e => {\n          //   addToFavorites(resp.data[0]);\n          // });\n\n          function modalCloseIngridient() {\n            modalInstanceIngridient.close();\n            modalCoctail.classList.remove('is-hidden-modal');\n            // modal.style.background = '#000c';\n          }\n          backBtnModalIngridient.addEventListener(\n            'click',\n            modalCloseIngridient\n          );\n          modalIngredientCloseBtn.addEventListener(\n            'click',\n            modalCloseIngridient\n          );\n        });\n      }\n    }\n\n    function modalCloseCoctail() {\n      modalInstanceCoctail.close();\n    }\n    linkModalCoctail.addEventListener('click', handleLinkOpenModalIngridient);\n    backBtnModalCoctail.addEventListener('click', modalCloseCoctail);\n    modalCoctailCloseBtn.addEventListener('click', modalCloseCoctail);\n  });\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hm5VY\")).toString();","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2KzFz\\\":\\\"index.90cdd68c.js\\\",\\\"5UbS1\\\":\\\"favorite-cocktail.d35eaac7.css\\\",\\\"hm5VY\\\":\\\"icons.35462022.svg\\\"}\"));"],"names":["$2shzp","parcelRequire","$6d1c8dd0cb4ec7e4$var$iconOff","URL","$6d1c8dd0cb4ec7e4$var$iconX","$6d1c8dd0cb4ec7e4$var$abd","$6d1c8dd0cb4ec7e4$export$90e74466ecafc0a2","query","$b2XdZ","getCocktails","then","response","ingridientsMarkup","data","ingredients","map","item","ingredientId","title","join","favs","JSON","parse","localStorage","getItem","addOrDelete","some","_id","modalInstanceCoctail1","$9B8F0","create","drinkThumb","drink","instructions","pathname","show","document","querySelector","id","addToFavorite","addEventListener","e","target","nodeName","classList","contains","dataset","value","cocktail","index","findIndex","push","innerHTML","setItem","stringify","splice","heartButton","console","log","linkModalCoctail","backBtnModalCoctail","modalCoctailCloseBtn","modalCoctail","modalCloseCoctail","close","e1","preventDefault","parentElement","queryId","closest","add","default","get","$6d1c8dd0cb4ec7e4$var$getIngredients","resp","favsIngredients","addOrDeleteIngredient","modalInstanceIngridient","type","description","country","abv","flavour","addToFavoriteIngredient","ingredient","backBtnModalIngridient","modalIngredientCloseBtn","modalCloseIngridient","remove","module","exports","resolve","import","meta","url","toString","register"],"version":3,"file":"index.90cdd68c.js.map"}